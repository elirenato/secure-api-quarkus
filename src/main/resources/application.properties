# Changing the default port because we're using the Keycloak at port 8080
quarkus.http.port=8081

quarkus.log.level=INFO
%prod.quarkus.log.level=${QUARKUS_LOG_LEVEL:ERROR}

# Disabled TLS verification because the app will run behind a reverse proxy
quarkus.oidc.tls.verification=none

# Set the Keycloak Configuration (Copy the secret generated on Keycloak application)
quarkus.oidc.auth-server-url=http://localhost:8080/auth/realms/app
quarkus.oidc.client-id=secure-api
quarkus.oidc.credentials.secret=1znUhMD3YXxgl6VwYske4Eia1WMeQ8dU

%prod.quarkus.oidc.auth-server-url=${QUARKUS_OIDC_AUTH-SERVER-URL}
%prod.quarkus.oidc.client-id=${QUARKUS_OIDC_CLIENT-ID}
%prod.quarkus.oidc.credentials.secret=${QUARKUS_OIDC_CREDENTIALS_SECRET}

# Set the database configurations
quarkus.datasource.db-kind=postgresql

quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/app
quarkus.datasource.username=app_user
quarkus.datasource.password=password

%prod.quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL}
%prod.quarkus.datasource.username=${QUARKUS_DATASOURCE_USERNAME}
%prod.quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD}

# Disable the default Quarkus dev services as we created the services on our own
quarkus.datasource.devservices.enabled=false

# Set Hibernate and liquibase configurations
quarkus.hibernate-orm.database.generation=update
quarkus.liquibase.migrate-at-start=true
quarkus.liquibase.change-log=liquibase/change-log.xml

# Kubernetes
#quarkus.kubernetes.deployment-kind=StatefulSet
quarkus.kubernetes.namespace=default
quarkus.kubernetes.env.configmaps=secure-api-quarkus-cfg-map
# https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
quarkus.kubernetes.image-pull-secrets=registry-credentials
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
quarkus.kubernetes.resources.requests.memory=64Mi
quarkus.kubernetes.resources.requests.cpu=250m
quarkus.kubernetes.resources.limits.memory=512Mi
quarkus.kubernetes.resources.limits.cpu=1000m

quarkus.container-image.group=com.mycompany
quarkus.container-image.name=secure-api-quarkus
quarkus.container-image.tag=1.0
#quarkus.container-image.push=true
quarkus.container-image.build=true
quarkus.container-image.registry=${QUARKUS_CONTAINER_IMAGE_REGISTRY}
quarkus.container-image.username=${QUARKUS_CONTAINER_IMAGE_USERNAME}
quarkus.container-image.password=${QUARKUS_CONTAINER_IMAGE_PASSWORD}
