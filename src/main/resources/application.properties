# Changing the default port because we're using the Keycloak at port 8080
quarkus.http.port=8081
quarkus.log.level=${QUARKUS_LOG_LEVEL:INFO}

quarkus.default-locale=en
quarkus.locales=en,pt-BR
#quarkus.log.category."quarkus.http".level=DEBUG

# Disabled TLS verification because the app will run using Kubernetes behind a reverse proxy (NGINX Ingress Controller)
# The Ingress will manage the HTTPS traffic (and will manage the certificates using Cert Manager and Let's encrypt)
quarkus.oidc.tls.verification=none

# Set the Keycloak Configuration (Copy the secret generated on Keycloak application)
quarkus.oidc.auth-server-url=${QUARKUS_OIDC_AUTH-SERVER-URL:http://localhost:8080/auth/realms/app}
quarkus.oidc.client-id=${QUARKUS_OIDC_CLIENT-ID:secure-api-quarkus}
quarkus.oidc.credentials.secret=${QUARKUS_OIDC_CREDENTIALS_SECRET:rQGYWLVWPNd8brFCqUfodNHv1SUfZ6We}

# Set the database configurations
quarkus.datasource.db-kind=postgresql

quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL:jdbc:postgresql://localhost:5432/app}
quarkus.datasource.username=${QUARKUS_DATASOURCE_USERNAME:app_user}
quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD:password}

# Disable the default Quarkus dev services as we created the services on our own
quarkus.datasource.devservices.enabled=false

# Set Hibernate and liquibase configurations
quarkus.hibernate-orm.database.generation=update
quarkus.liquibase.migrate-at-start=true
quarkus.liquibase.change-log=liquibase/change-log.xml
#quarkus.hibernate-orm.log.sql=true

# Kubernetes
quarkus.kubernetes.namespace=default
quarkus.kubernetes.add-version-to-label-selectors=false
quarkus.kubernetes.env.configmaps=secure-api-quarkus-cfg-map
# https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
quarkus.kubernetes.image-pull-secrets=registry-credentials
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
quarkus.kubernetes.resources.requests.memory=64Mi
quarkus.kubernetes.resources.requests.cpu=250m
quarkus.kubernetes.resources.limits.memory=512Mi
quarkus.kubernetes.resources.limits.cpu=1000m

# image build configuration
quarkus.container-image.group=com.mycompany
quarkus.container-image.name=secure-api-quarkus

# https://quarkus.io/guides/http-reference
quarkus.http.cors=true
quarkus.http.cors.origins=${QUARKUS_HTTP_CORS_ORIGINS:/http://localhost(:[0-9]+)?/}

%prod.quarkus.http.root-path=quarkus
